{"ast":null,"code":"import _regeneratorRuntime from \"/Users/gnawleahcim/Documents/kiwi-maintenance/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/gnawleahcim/Documents/kiwi-maintenance/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/gnawleahcim/Documents/kiwi-maintenance/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gnawleahcim/Documents/kiwi-maintenance/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gnawleahcim/Documents/kiwi-maintenance/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gnawleahcim/Documents/kiwi-maintenance/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gnawleahcim/Documents/kiwi-maintenance/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gnawleahcim/Documents/kiwi-maintenance/client/src/pages/Chart.js\";\nimport React, { Component } from 'react';\nimport SplitPane from 'react-split-pane';\nimport Iframe from 'react-iframe';\nimport '../index.css';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport moment from \"moment-timezone\";\nimport { // eslint-disable-next-line\nBrowserView, // eslint-disable-next-line\nMobileView, // eslint-disable-next-line\nisBrowser, isMobile } from \"react-device-detect\";\nvar SearchBar = Search.SearchBar,\n    ClearSearchButton = Search.ClearSearchButton;\nvar columns = [{\n  dataField: 'KiwibotID',\n  text: 'Bot #',\n  sort: true,\n  headerStyle: function headerStyle(colum, colIndex) {\n    return {\n      width: '90px',\n      textAlign: 'center'\n    };\n  }\n}, {\n  dataField: 'Status',\n  text: 'Status',\n  sort: true,\n  headerStyle: function headerStyle(colum, colIndex) {\n    return {\n      width: '110px',\n      textAlign: 'center'\n    };\n  },\n  classes: function callback(cell, row, rowIndex, colIndex) {\n    \"border-box truncate pill px1 cellToken choiceToken line-height-4 fit mr-half flex-none redBright print-color-exact text-white\";\n  }\n}, {\n  dataField: 'Symtoms/Diagnostic',\n  text: 'Diagnostic',\n  sort: true\n}, {\n  dataField: 'Accountable',\n  text: 'Accountable',\n  sort: true,\n  headerStyle: function headerStyle(colum, colIndex) {\n    return {\n      width: '150px',\n      textAlign: 'center'\n    };\n  }\n}, {\n  dataField: 'Last Updated',\n  text: 'Last Updated',\n  sort: true,\n  headerStyle: function headerStyle(colum, colIndex) {\n    return {\n      width: '190px',\n      textAlign: 'center'\n    };\n  }\n}, {\n  dataField: 'Problem',\n  text: 'Problems',\n  headerStyle: function headerStyle(colum, colIndex) {\n    return {\n      width: '110px',\n      textAlign: 'center'\n    };\n  }\n}];\nvar defaultSorted = [{\n  dataField: 'KiwibotID',\n  order: 'asc'\n}];\n\nvar Chart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chart, _Component);\n\n  function Chart(props) {\n    var _this;\n\n    _classCallCheck(this, Chart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chart).call(this, props));\n    _this.callApi =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/api/get');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              return _context.abrupt(\"return\", body);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.state = {\n      botxreg: []\n    };\n    return _this;\n  }\n\n  _createClass(Chart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      setInterval(function () {\n        return _this2.refresh();\n      }, 5000);\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var _this3 = this;\n\n      this.callApi().then(function (res) {\n        return _this3.setState({\n          botxreg: res.express\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (isMobile) {\n        return React.createElement(Iframe, {\n          url: \"https://airtable.com/shryz6KcYKk2rdU1u\",\n          width: \"100%\",\n          height: \"800\",\n          id: \"myId\",\n          className: \"airtable-embed\",\n          display: \"initial\",\n          position: \"relative\",\n          allowFullScreen: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(SplitPane, {\n          split: \"vertical\",\n          minSize: 800,\n          maxSize: 1200,\n          defaultSize: 1000,\n          allowResize: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"table-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(Iframe, {\n          url: \"https://airtable.com/embed/shranXlgJpGsbzbrm?backgroundColor=purple&viewControls=on\",\n          width: \"100%\",\n          height: \"800\",\n          id: \"table\",\n          className: \"airtable-embed\",\n          display: \"initial\",\n          position: \"relative\",\n          allowFullScreen: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"overlay\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(Iframe, {\n          url: \"https://airtable.com/shryz6KcYKk2rdU1u?backgroundColor=purple\",\n          width: \"100%\",\n          height: \"800\",\n          id: \"myId\",\n          className: \"airtable-embed\",\n          display: \"initial\",\n          position: \"relative\",\n          allowFullScreen: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        })));\n      }\n    }\n  }]);\n\n  return Chart;\n}(Component);\n\nexport default Chart;\n\nvar RowData = function RowData(_ref2) {\n  var id = _ref2.id,\n      fields = _ref2.fields;\n  return {\n    'KiwibotID': fields['KiwibotID'],\n    'Status': fields['Status'],\n    'Symtoms/Diagnostic': fields['Symtoms/Diagnostic'],\n    'Accountable': fields['Accountable'],\n    'Last Updated': DateConvert(fields['Last Updated']),\n    'Problem': fields['Problem']\n  };\n};\n/**\n * @return {string}\n */\n\n\nfunction DateConvert(dateString) {\n  var newDateString = moment.tz(dateString, \"America/Los_Angeles\").format();\n  return newDateString.slice(0, 4) + \"/\" + newDateString.slice(5, 7) + \"/\" + newDateString.slice(8, 10) + \"  \" + TimeConvert(newDateString.slice(11, 16));\n}\n/**\n * @return {string}\n */\n\n\nfunction TimeConvert(timeString) {\n  var hh = timeString.slice(0, 2);\n  var mm = timeString.slice(3, 5);\n  var dd = \"AM\";\n  var h = hh;\n\n  if (h >= 12) {\n    h = hh - 12;\n    dd = \"PM\";\n  }\n\n  if (h === 0) {\n    h = 12;\n  }\n\n  return h + \":\" + mm + \" \" + dd;\n}","map":{"version":3,"sources":["/Users/gnawleahcim/Documents/kiwi-maintenance/client/src/pages/Chart.js"],"names":["React","Component","SplitPane","Iframe","BootstrapTable","ToolkitProvider","Search","moment","BrowserView","MobileView","isBrowser","isMobile","SearchBar","ClearSearchButton","columns","dataField","text","sort","headerStyle","colum","colIndex","width","textAlign","classes","callback","cell","row","rowIndex","defaultSorted","order","Chart","props","callApi","fetch","response","json","body","status","Error","message","state","botxreg","setInterval","refresh","then","res","setState","express","catch","err","console","log","RowData","id","fields","DateConvert","dateString","newDateString","tz","format","slice","TimeConvert","timeString","hh","mm","dd","h"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SplitPane from 'react-split-pane';\nimport Iframe from 'react-iframe'\nimport '../index.css';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport moment from \"moment-timezone\";\nimport {\n    // eslint-disable-next-line\n    BrowserView,\n    // eslint-disable-next-line\n    MobileView,\n    // eslint-disable-next-line\n    isBrowser,\n    isMobile\n} from \"react-device-detect\";\n\nconst { SearchBar, ClearSearchButton } = Search;\nconst columns = [{\n    dataField: 'KiwibotID',\n    text: 'Bot #',\n    sort: true,\n    headerStyle: (colum, colIndex) => {\n        return { width: '90px', textAlign: 'center' };\n    }\n}, {\n    dataField: 'Status',\n    text: 'Status',\n    sort: true,\n    headerStyle: (colum, colIndex) => {\n        return { width: '110px', textAlign: 'center' };\n    },\n    classes: function callback(cell, row, rowIndex, colIndex)\n    {\n        \"border-box truncate pill px1 cellToken choiceToken line-height-4 fit mr-half flex-none redBright print-color-exact text-white\"\n    }\n}, {\n    dataField: 'Symtoms/Diagnostic',\n    text: 'Diagnostic',\n    sort: true,\n}, {\n    dataField: 'Accountable',\n    text: 'Accountable',\n    sort: true,\n    headerStyle: (colum, colIndex) => {\n        return { width: '150px', textAlign: 'center' };\n    }\n}, {\n    dataField: 'Last Updated',\n    text: 'Last Updated',\n    sort: true,\n    headerStyle: (colum, colIndex) => {\n        return { width: '190px', textAlign: 'center' };\n    }\n}, {\n    dataField: 'Problem',\n    text: 'Problems',\n    headerStyle: (colum, colIndex) => {\n        return { width: '110px', textAlign: 'center' };\n    }\n}];\n\nconst defaultSorted = [{\n    dataField: 'KiwibotID',\n    order: 'asc'\n}];\n\nclass Chart extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            botxreg: [],\n        };\n    }\n\n    componentDidMount() {\n        setInterval(() => this.refresh(), 5000);\n    }\n\n    refresh() {\n        this.callApi()\n            .then(res => this.setState({ botxreg: res.express }))\n            .catch(err => console.log(err));\n    }\n\n    callApi = async () => {\n        const response = await fetch('/api/get');\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n        return body;\n    };\n\n    render() {\n        if (isMobile) {\n            return (\n                <Iframe url=\"https://airtable.com/shryz6KcYKk2rdU1u\"\n                        width=\"100%\"\n                        height=\"800\"\n                        id=\"myId\"\n                        className=\"airtable-embed\"\n                        display=\"initial\"\n                        position=\"relative\"\n                        allowFullScreen/>\n            )\n        } else {\n            return (\n                <SplitPane split=\"vertical\" minSize={800} maxSize={1200} defaultSize={1000} allowResize={true}>\n                    <div className=\"table-wrapper\">\n                        <Iframe url=\"https://airtable.com/embed/shranXlgJpGsbzbrm?backgroundColor=purple&viewControls=on\"\n                                width=\"100%\"\n                                height=\"800\"\n                                id=\"table\"\n                                className=\"airtable-embed\"\n                                display=\"initial\"\n                                position=\"relative\"\n                                allowFullScreen/>\n                    </div>\n                    <div className=\"overlay\">\n                        <Iframe url=\"https://airtable.com/shryz6KcYKk2rdU1u?backgroundColor=purple\"\n                                width=\"100%\"\n                                height=\"800\"\n                                id=\"myId\"\n                                className=\"airtable-embed\"\n                                display=\"initial\"\n                                position=\"relative\"\n                                allowFullScreen/>\n                    </div>\n                </SplitPane>\n            );\n        }\n    }\n}\n\nexport default Chart;\n\nconst RowData = ({id, fields}) => (\n    {\n        'KiwibotID': fields['KiwibotID'],\n        'Status': fields['Status'],\n        'Symtoms/Diagnostic': fields['Symtoms/Diagnostic'],\n        'Accountable': fields['Accountable'],\n        'Last Updated': DateConvert(fields['Last Updated']),\n        'Problem': fields['Problem']\n    }\n);\n\n/**\n * @return {string}\n */\nfunction DateConvert(dateString) {\n    let newDateString = moment.tz(dateString, \"America/Los_Angeles\").format();\n    return newDateString.slice(0, 4) + \"/\"\n        + newDateString.slice(5, 7) + \"/\"\n        + newDateString.slice(8, 10) + \"  \"\n        + TimeConvert(newDateString.slice(11, 16));\n}\n\n/**\n * @return {string}\n */\nfunction TimeConvert(timeString) {\n    const hh = timeString.slice(0, 2);\n    const mm = timeString.slice(3, 5);\n    let dd = \"AM\";\n    let h = hh;\n    if (h >= 12) {\n        h = hh - 12;\n        dd = \"PM\";\n    }\n    if (h === 0) {\n        h = 12;\n    }\n\n    return h + \":\" + mm + \" \" + dd;\n}\n"]},"metadata":{},"sourceType":"module"}